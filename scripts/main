#!/bin/zsh
set -eu

domain="carterpape.com"
production_bucket="s3-for-carterpape-com:carterpape.com"

set -o allexport
source .env
set +o allexport

script_path=$(realpath $0)
scripts_dir_path=$(dirname $script_path)
project_dir_path=$(dirname $scripts_dir_path)
site_path="$project_dir_path/_site"
posts_path="$project_dir_path/_posts"
post_assets_path="$project_dir_path/assets/posts"

browser_headers=$(cat <<EOM
{
    "headers": {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "en-US,en;q=0.9",
        "Connection": "keep-alive",
        "Priority": "u=0, i",
        "Sec-Fetch-Dest": "document",
        "Sec-Fetch-Mode": "navigate",
        "Sec-Fetch-Site": "none",
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.5 Safari/605.1.15"
    }
}
EOM
)

source "$scripts_dir_path/activate_env"

dev () {
    bundle exec jekyll serve \
        --incremental \
        --host $DEV_HOST_NAME \
        --port $DEV_PORT \
        --livereload-port $DEV_LIVERELOAD_PORT
}

test () {
    # check_names --print-on-fail
    # check_for_archived_pages
    production_build
    
    proof_html
    
    aws sso login
    
    rclone sync         \
        --dry-run       \
        --checksum      \
        --progress      \
        --fast-list     \
        --track-renames \
        $site_path      \
        $production_bucket
}

production_build () {
    JEKYLL_ENV="production" bundle exec jekyll build
}

push () {
    # check_names --die-on-fail
    # archive_new_links
    production_build
    
    proof_html
    
    aws sso login
    
    rclone sync         \
        --checksum      \
        --progress      \
        --fast-list     \
        --track-renames \
        $site_path      \
        $production_bucket
    
    # TODO: set the caching headers on all files that need it (maybe with https://s3tools.org/s3cmd)
    # TODO: purge the CloudFlare cache of updated files
    # TODO: turn _site/redirects into a Cloudflare bulk redirect list
    
    git pull
    
    echo 'If git-lfs asks for a credential, go make a new token at "https://github.com/settings/tokens" and enter it.'
    
    git push
    
    # When it comes time to push objects to git-lfs, git will ask for a username and password. If using VSCode, this will come up as a little pop-up, probably near the top of the window. 
    # This username and password is not set by the Lambda function in AWS. The username and password need to be the label and token for a GitHub personal access token (https://github.com/settings/tokens). Fine-grained tokens work.
    # The personal access token only has to belong to the correct user (carterpape); it doesn't need any special permissions. By design, these access tokens expire over time, so if uploading to git-lfs hangs, it probably means it's time to go make a new token.
}

init_env () {
    bundle config set path "$project_dir_path/vendor.noindex"
    bundle config set bin "$project_dir_path/bin"
    bundle install
}

reset_ruby () {
    rm -rf $project_dir_path/vendor.noindex
    rm -rf $project_dir_path/Gemfile.lock
    rm -rf $project_dir_path/bin
    gem update --system
    gem install bundler
    init_env
}

give_names () {
    $project_dir_path/scripts/give_names.rb
}

check_names () {
    $project_dir_path/scripts/check_names.rb $1
}

proof_html () {
    htmlproofer $site_path \
        --typhoeus="$browser_headers" \
        --checks Links,Images,Scripts,Favicon,OpenGraph \
        --cache '{"timeframe": {"external": "2w"}}' \
        --swap_urls '^((https?\:)?//)?carterpape\.com:' \
        --no-check_external_hash
}

subcommand="${1}" 
case ${subcommand} in 
    dev)
        dev
        ;;
    test)
        test
        ;;
    push)
        push
        ;;
    init_env)
        init_env
        ;;
    reset_ruby)
        reset_ruby
        ;;
    proof_html)
        proof_html
        ;;
    *)
        echo "`basename ${0}`: usage: dev | test | push | init_env | reset_ruby | proof_html"
        exit 1
        ;;
esac
